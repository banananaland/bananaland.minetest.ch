version: "2"

services:
 minetest:
  image: buckaroobanzay/minetest:5.8.0-r1
  restart: always
  networks:
   - terminator
   - default
  ports:
   - "30000:30000/udp"
  depends_on:
   - "postgres"
  volumes:
   - "./data/minetest:/data"
   - "./minetest_game:/data/world/game"
   - "./data/crashlogs:/crashlogs"
   - "./data/minetest/debug.txt:/root/.minetest/debug.txt"
   - "postgres_socket:/var/run/postgresql"
  logging:
   options:
    max-size: 50m

 postgres:
  image: postgres:14.1-alpine
  restart: always
  shm_size: '2gb'
  environment:
   POSTGRES_PASSWORD: enter
  volumes:
   - "./data/postgres:/var/lib/postgresql/data"
   - "postgres_socket:/var/run/postgresql"
  command:
   - "postgres"
   - "-c"
   - "shared_buffers=4GB"
   - "-c"
   - "synchronous_commit=off"
  logging:
   options:
    max-size: 50m

 ui:
  image: ghcr.io/minetest-go/mtui:1.62
  environment:
   WORLD_DIR: "/data/world"
   COOKIE_DOMAIN: "bananaland.minetest.ch"
   COOKIE_SECURE: "true"
   COOKIE_PATH: "/ui"
   SERVER_NAME: "Bananaland"
   WASM_MINETEST_HOST: "minetest"
  volumes:
   - "./data/minetest:/data"
   - "postgres_socket:/var/run/postgresql"

 matterbridge:
   image: 42wim/matterbridge:1.26.0
   volumes:
    - ./matterbridge.toml:/etc/matterbridge/matterbridge.toml

 mapserver:
  image: minetestmapserver/mapserver:4.8.0
  restart: always
  depends_on:
   - "postgres"
   - "minetest"
  volumes:
   - "./data/minetest/world:/minetest"
   - "postgres_socket:/var/run/postgresql"
  working_dir: "/minetest"
  logging:
   options:
    max-size: 50m

 manager:
  image: buckaroobanzay/minetest_manager
  depends_on:
   - minetest
  restart: always
  volumes:
   - "./data:/data"
  environment:
   - WORLDMODS_DIR=/data/minetest/world/worldmods
   - WORLDMODS_BRANCH=master
   - MEDIADIR=/data/nginx/html/media
   - DEBUG_LOG=/data/minetest/debug.txt
   - ERROR_LOG_OUTPUT=/data/nginx/html/error-log.txt
  logging:
   options:
    max-size: 50m

 nginx:
  image: nginx:1.25.5
  networks:
   - terminator
   - default
  restart: always
  depends_on:
   - mapserver
   - ui
  labels:
    - "traefik.enable=true"
    - "traefik.docker.network=terminator"
    - "traefik.http.routers.bananaland.rule=Host(`bananaland.minetest.ch`)"
    - "traefik.http.services.bananaland.loadbalancer.server.port=80"
    - "traefik.http.routers.bananaland.entrypoints=websecure"
    - "traefik.http.routers.bananaland.tls.certresolver=default"
  volumes:
   - "./data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
   - "./data/nginx/htpasswd:/etc/nginx/htpasswd:ro"
   - "./data/html:/html"
   - "./data/crashlogs:/crashlogs"
  logging:
   options:
    max-size: 50m

volumes:
  postgres_socket: {}

networks:
 terminator:
  external: true
